service: aws-cron
frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs20.x
  region: ap-south-1
  memorySize: 1024 # repository wide Lambda memory size
  stage: dev
  timeout: 30 # repository wide Lambda timeout
  environment: # repository wide Lambda env variables
    NODE_ENV: production
    # AWS_REG: xxxx  ( aws region )
    # AWS_ACC_KEY_ID: xxxx ( aws access key )
    # AWS_SEC_ACCESS_KEY: xxxx ( aws secret access key )
    WORKER_LAMBDA_ARN: arn:aws:lambda:xxxx
    DATABASE_URL: libsql://xxxx
    DATABASE_AUTH_TOKEN: xxxx

plugins:
  - serverless-esbuild # used for compiling/packaging the Typescript code
  - serverless-offline # used for local execution

custom:
  esbuild:
    bundle: true
    minify: false
    sourcemap: true
    exclude: [] # If you using Node.js 18 Exclude AWS SDK as it is already available in the AWS environment. If you are using Node.js 20, make this empty.
    target: "node20" # Node.js version must match your runtime
    define: { "require.resolve": "undefined" }
    platform: "node"
    concurrency: 10

functions:
  app:
    handler: src/app.handler
    events:
      - http:
          path: /
          method: any
          cors: true
  # Project APIs
  createProject:
    handler: handler.createProject
    events:
      - http:
          path: projects
          method: post
          cors: true
  updateProject:
    handler: handler.updateProject
    events:
      - http:
          path: projects/{project_id}
          method: put
          cors: true
  listProjects:
    handler: handler.listProjects
    events:
      - http:
          path: projects
          method: get
          cors: true
  # Webhook APIs
  executeWebhook:
    handler: handler.executeWebhook
    events:
      - http:
          path: webhook
          method: post
          cors: true
  # Schedule APIs
  createSchedule:
    handler: handler.createSchedule
    events:
      - http:
          path: projects/{project_id}/schedules
          method: post
          cors: true
  listSchedules:
    handler: handler.listSchedules
    events:
      - http:
          path: projects/{project_id}/schedules
          method: get
          cors: true
  updateSchedule:
    handler: handler.updateSchedule
    events:
      - http:
          path: projects/{project_id}/schedules/{schedule_id}
          method: put
          cors: true
  deleteSchedule:
    handler: handler.deleteSchedule
    events:
      - http:
          path: projects/{project_id}/schedules/{schedule_id}
          method: delete
          cors: true
